from tkinter import *
import random

class TicTacToeGUI:
    def __init__(self):
        self.root = Tk()
        self.root.title("Tic Tac Toe")
        self.board = [" "]*9
        self.current_player = "X"
        self.buttons = []
        for i in range(9):
            button = Button(self.root, text=" ", font=("Arial", 20), height=2, width=4,
                               command=lambda i=i: self.button_click(i))
            button.grid(row=i//3, column=i%3)
            self.buttons.append(button)

    def reset_board(self):
        self.board = [" "]*9
        self.current_player = "X"
        for i in range(9):
            self.buttons[i].config(text=" ", state="normal")

    def button_click(self, i):
        if self.board[i] == " ":
            self.board[i] = self.current_player
            self.buttons[i].config(text=self.current_player)
            if self.check_win():
                self.end_game()
            elif " " not in self.board:
                self.end_game()
            else:
                self.switch_player()
                if self.current_player == "O":
                    self.ai_move()

    def switch_player(self):
        self.current_player = "O" if self.current_player == "X" else "X"

    def check_win(self):
        for i in range(3):
            if self.board[i*3] == self.board[i*3+1] == self.board[i*3+2] != " ":
                return True
            if self.board[i] == self.board[i+3] == self.board[i+6] != " ":
                return True
        if self.board[0] == self.board[4] == self.board[8] != " ":
            return True
        if self.board[2] == self.board[4] == self.board[6] != " ":
            return True
        return False

    def end_game(self):
        for button in self.buttons:
            button.config(state="disabled")
        winner = self.check_win()
        if winner:
            message = f"{winner} wins!"
        else:
            message = "Tie game!"
        replay_quit_frame = Frame(self.root)
        replay_quit_frame.grid(row=4, column=0, columnspan=3, pady=10)
        message_label = Label(replay_quit_frame, text=message, font=("Arial", 16))
        message_label.pack(side=LEFT, padx=5)
        replay_button = Button(replay_quit_frame, text="Replay", font=("Arial", 16), command=self.reset_board)
        replay_button.pack(side=LEFT, padx=5)
        quit_button = Button(replay_quit_frame, text="Quit", font=("Arial", 16), command=self.root.destroy)
        quit_button.pack(side=LEFT, padx=5)

    def ai_move(self):
        empty_spots = [i for i in range(9) if self.board[i] == " "]
        if empty_spots:
            spot = random.choice(empty_spots)
            self.board[spot] = "O"
            self.buttons[spot].config(text="O")
            if self.check_win():
                self.end_game()
            elif " " not in self.board:
                self.end_game()
            else:
                self.switch_player()
        else:
            self.end_game()

game = TicTacToeGUI()
game.root.mainloop()
